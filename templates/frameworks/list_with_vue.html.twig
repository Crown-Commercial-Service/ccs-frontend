{% extends 'base.html.twig' %}

{% block title %}Search agreements - CCS{% endblock %}
{% block metadescription %}This list provides a summary of the CCS agreements currently available through which government, public and third sector organisations can buy common goods and services. It includes details of when each agreement is due to expire and a web link to the full agreement information.{% endblock %}

{% block header %}
    {% embed '/includes/header.html.twig' %}
        {% block bannerarea %}
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block body %}

    <!-- required wrapper 1 -->
    <div class="govuk-width-container">

        <!-- If your design requires them, you should place components such as breadcrumbs, back link and phase banner inside this wrapper so that they sit directly underneath the header. -->

        <div class="govuk-phase-banner">
            {% include '/includes/phase-banner-content.html.twig' %}
        </div>

        <p style="color:blue;font-size:50px;">Dont mess with me, I have VUE JS</p>

        <div class="govuk-breadcrumbs">
            <ol class="govuk-breadcrumbs__list">
                <li class="govuk-breadcrumbs__list-item">
                    <a class="govuk-breadcrumbs__link" href="/">Home</a>
                </li>
                    {% if category is defined or pillar is defined %}
                    <li class="govuk-breadcrumbs__list-item">
                        <a class="govuk-breadcrumbs__link" href="/agreements">Search agreements </a>
                    </li>
                    {% if category is defined and category|trim is not empty  %}
                        <li class="govuk-breadcrumbs__list-item" aria-current="page">{{ category }}</li>
                    {% elseif pillar is defined and pillar|trim is not empty %}
                        <li class="govuk-breadcrumbs__list-item" aria-current="page">{{ pillar }}</li>
                    {% endif %}
                {% else %}
                    <li class="govuk-breadcrumbs__list-item" aria-current="page">
                        Search agreements
                    </li>
                {% endif %}
            </ol>
        </div>


        <!-- required wrapper 2 -->
        <main id="main-content" class="govuk-main-wrapper">


            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full">

                    {% if category is defined and category|trim is not empty  %}
                        <h1 class="govuk-heading-xl page-title">{{ query is defined and query|trim is not empty ? "Search agreements for #{query} in #{category} category" : "Search agreements in #{category} category" }}</h1>
                        <script>pushToDataLayer({'event': 'page_view', 'page_referrer': window.location.href, 'page_type': 'agreement', 'category':'{{category}}'});</script>
                    {% elseif pillar is defined and pillar|trim is not empty %}
                        <h1 class="govuk-heading-xl page-title">{{ query is defined and query|trim is not empty ? "Search agreements for #{query} in #{pillar} category" : "Search agreements in #{pillar} category" }}</h1>
                        <script>pushToDataLayer({'event': 'page_view', 'page_referrer': window.location.href, 'page_type': 'agreement', 'pillar':'{{pillar}}'});</script>
                    {% elseif query is defined and query|trim is not empty %}
                        <h1 class="govuk-heading-xl page-title">Search agreements for {{ query }}</h1>
                        <script>pushToDataLayer({'event': 'page_view', 'page_referrer': window.location.href, 'page_type': 'agreement'});</script>
                    {% else %}
                        <h1 class="govuk-heading-xl page-title">Search agreements</h1>
                        <script>pushToDataLayer({'event': 'page_view', 'page_referrer': window.location.href, 'page_type': 'agreement'});</script>
                    {% endif %}

                </div>
            </div>


            <div class="govuk-grid-row">
                {% include '/frameworks/filter_options.html.twig' %}

                 <div class="govuk-grid-column-two-thirds">
                        {% if pagination.totalResults == 1 %}
                            <h2 class="govuk-heading-m ccs-font-weight-semibold govuk-!-font-size-24">{{ pagination.totalResults }} agreement found</h2>
                        {% else %}
                            <h2 class="govuk-heading-m ccs-font-weight-semibold govuk-!-font-size-24">{{ pagination.totalResults }} agreements found</h2>
                        {% endif %}
                 </div>

                {% if statuses is defined %}
                    {% set statusLive = '&statuses%5B%5D=live' %}
                    {% set statusExpired = '&statuses%5B%5D=expired' %}

                    <div class="govuk-grid-column-two-thirds">
                        <div class="ccs-filters-summary ccs-filter-summary-frameworks">
                            <div class="ccs-filters-summary__facets" style="display: block; margin-top:0">
                                <span class="ccs-filters-summary__label">Matching</span>
                                <ul class="ccs-filters-summary__list">

                                    {% if 'live' in statuses %}
                                        <li class="ccs-filters-summary__facet">
                                            <a href="{{ "/agreements/search?q=#{ query is defined and query|trim is not empty ? query : '' }#{ 'expired' in statuses ? statusExpired : '' }" }}" class="ccs-filters-summary__facet__cancel"> 
                                                <span> Live </span>
                                            </a>  
                                        </li>
                                    {% endif %}

                                    {% if statuses|length > 1 %}
                                        <li style="display: inline; padding-right: 5px;" >and</li>
                                    {% endif %}

                                    {% if 'expired' in statuses%}
                                        <li class="ccs-filters-summary__facet">
                                            <a href="{{ "/agreements/search?q=#{ query is defined and query|trim is not empty ? query : '' }#{'live' in statuses ? statusLive : '' }" }}" class="ccs-filters-summary__facet__cancel"> 
                                                <span> Expired </span>
                                            </a>  
                                        </li>
                                    {% endif %}

                                </ul>
                            </div>
                        </div>
                    </div>
                {% endif %}
                

                {% if query is defined and query|trim is not empty %}
                    <div class="govuk-grid-column-two-thirds">
                        <div class="ccs-filters-summary ccs-filter-summary-frameworks">
                            <div class="ccs-filters-summary__facets" style="display: block; margin-top:0">
                                <span class="ccs-filters-summary__label">Containing</span>
                                <ul class="ccs-filters-summary__list">
                                    <li class="ccs-filters-summary__facet">
                                        {% if category is defined and category|trim is not empty %}
                                            <a href=" {{"/agreements/search?q=&category=#{category_slug}#{ statuses is defined and 'live' in statuses ? statusLive : '' }#{ statuses is defined and 'expired' in statuses ? statusExpired : '' }" }}" class="ccs-filters-summary__facet__cancel">
                                                <span>{{ query }}</span>
                                            </a>
                                        {% elseif pillar is defined and pillar|trim is not empty %}
                                            <a href=" {{"/agreements/search?q=&pillar=#{pillar_slug}#{ statuses is defined and 'live' in statuses ? statusLive : '' }#{ statuses is defined and 'expired' in statuses ? statusExpired : '' }" }}" class="ccs-filters-summary__facet__cancel">
                                                <span>{{ query }}</span>
                                            </a>
                                        {% else %}
                                            <a href=" {{"/agreements/search?q=#{ statuses is defined and 'live' in statuses ? statusLive : '' }#{ statuses is defined and 'expired' in statuses ? statusExpired : '' }" }}" class="ccs-filters-summary__facet__cancel">
                                                <span>{{ query }}</span>
                                            </a>
                                        {% endif %}
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                {% endif %}

                <div class="govuk-grid-column-two-thirds">
                    {# see https://Strata.github.io/frontend/templating/content-fields.html #}

                    <ul class="govuk-list govuk-list--frameworks">
                        {% for item in results %}
                            <li>
                                <h3 class="govuk-heading-m ccs-heading-link ccs-heading-link--inline govuk-!-margin-bottom-2 ccs-font-weight-semibold govuk-!-font-size-22">
                                    <a href="{{ path('frameworks_show', {'rmNumber':  item.content.rm_number }) }}">{{ item.content.title }}</a> {# <strong class="govuk-tag govuk-tag--subtle">{{ item.content.status }}</strong> #}
                                    {% if item.content.status == 'Expired - Data Still Received' %}
                                        <span class="govuk-tag ccs-tag ccs-tag--error">Expired: {{ item.content.end_date.format('d/m/Y') }}</span>
                                    {% endif %}
                                </h3>
                                
                                <ul class="list--inline govuk-body-s govuk-!-margin-bottom-2">
                                    <li> <strong>Agreement ID:</strong> {{ item.content.rm_number }} </li>
                                    <li> <strong>Start Date:</strong> {{ item.content.start_date.format('d/m/Y') }} </li>
                                    
                                    {% if item.content.status != 'Expired - Data Still Received' %}
                                        <li> <strong>End Date:</strong> {{ item.content.end_date.format('d/m/Y') }} </li>
                                    {% endif %}

                                    {% if tpp_feature_toggle == true %}
                                        {% if item.content.regulation is not null %}
                                        <li> <strong>Regulation:</strong> {{ item.content.regulation }} </li>
                                        {% else %}
                                            <li> <strong>Regulation:</strong></li>
                                        {% endif %}
                                    {% endif %}
                                </ul>
                                <p class="govuk-body-s">{{ item.content.summary | striptags | raw }}</p>
                            </li>
                        {% endfor %}
                    </ul>

                    {% if tpp_feature_toggle == true and results|length == 0 and 'PA2023' in regulation and regulation|length == 1 %}
                        <p>There are 0 agreements on regulation PA2023, go to the <a href="{{ path('frameworks_upcoming_deals') }}">upcoming agreement page</a> for further information</p>
                    {% elseif results|length == 0 %}
                        <h3>There are no matching results.</h3>
                        <p class="govuk-!-margin-bottom-0">Improve your search results by:</p>
                        <ul>
                            <li><p class="govuk-!-margin-bottom-1">removing filters</p></li>
                            <li><p class="govuk-!-margin-bottom-1">double-checking your spelling</p></li>
                            <li><p class="govuk-!-margin-bottom-1">using fewer keywords</p></li>
                            <li><p class="govuk-!-margin-bottom-1">clicking 'start now' and answering a few simple questions to find the best agreement for your needs</p></li>
                        </ul>
                        <br>
                        <p>If you are still unable to find what you need, contact our customer service centre using our <a class="govuk-link" href="/contact">contact us form</a>.</p>
                    {% endif %}


                    {% set statusData = statuses is defined and statuses is not empty ? {'statuses' : statuses} : {} %}
                    {% set queryData = query is defined and query|trim is not empty ? {'q' : query} : {} %}

                    {# Pagination #}
                    {% if pillar is defined and pillar|trim is not empty %}
                        {%  set pagination_data = {'pagination': pagination, 'route': 'frameworks_search', 'options': {'pillar': pillar_slug}|merge(statusData)|merge(queryData)} %}
                    {% elseif category is defined and category|trim is not empty %}
                        {%  set pagination_data = {'pagination': pagination, 'route': 'frameworks_search', 'options': {'category': category_slug}|merge(statusData)|merge(queryData)} %}
                    {% elseif query is defined and query|trim is not empty %}
                        {%  set pagination_data = {'pagination': pagination, 'route': 'frameworks_search', 'options': {'q': query}|merge(statusData)} %}
                    {% else %}
                        {%  set pagination_data = {'pagination': pagination, 'route': 'frameworks_search', 'options': statusData} %}
                    {% endif %}

                    {% if pagination.totalPages > 1 %}
                        {{ include('includes/pagination.html.twig', pagination_data) }}
                    {% endif %}

                </div>
            </div>


        </main>
    </div>
    <script> searchFilterAgreement(); </script>

    {% if app.environment == "prod" %}
        <script src="/assets/scripts/libraries/vue.min.js?v=1"></script>
    {% else %}
        <script src="/assets/scripts/libraries/vue.js?v=1"></script>
    {% endif %}
    <script>

        function supportsLiterals() {
            try{
                return eval("''===``");
            }
            catch(e){
                return false;
            }
        }

        if(!('Promise' in window) || !supportsLiterals() || !window.fetch) {
            throw new Error("Your browser doesn't support the necessary JavaScript functions to use the enhanced search and has been served a non-JavaScript version");
        }


        var apiBaseUrl                  = '{{ api_base_url }}';
        var appBaseUrl                  = '{{ app_base_url }}';
        var pageNumber                  = {% if pageNumber is defined and pageNumber is not empty %}{{ pageNumber }}{% else %}1{% endif %};
        var checkedStatus               = [];
        var checkedRegulation           = [];
        var checkedType                 = [];
        var checkedPillar               = [];
        var checkedCategory             = [];
        
        {% if filters.checkedStatus is defined and filters.checkedStatus is not empty %}
            var checkedStatus   = Array.from([{{filters.checkedStatus}}]);
        {% endif %}

        {% if filters.checkedRegulation is defined and filters.checkedRegulation is not empty %}
            var checkedRegulation   = Array.from([{{filters.checkedRegulation}}]);
        {% endif %}

        {% if filters.checkedType is defined and filters.checkedType is not empty %}
            var checkedType   = Array.from([{{filters.checkedType}}]);
        {% endif %}

        {% if filters.checkedPillar is defined and filters.checkedPillar is not empty %}
            var checkedPillar   = Array.from([{{filters.checkedPillar}}]);
        {% endif %}

        {% if filters.checkedCategory is defined and filters.checkedCategory is not empty %}
            var checkedCategory   = Array.from([{{filters.checkedCategory}}]);
        {% endif %}

        Vue.component('results-pagination', {
            delimiters: ['{[', ']}'],
            props: {
                currentPage: Number,
                totalResults: Number,
                numberOfPages: Number,
            },
            computed: {
                nextPage: function() {
                    if(this.currentPage == this.numberOfPages) {
                        return this.currentPage;
                    }
                    return this.currentPage + 1;
                },
                previousPage: function() {
                    if(this.currentPage == 1) {
                        return this.currentPage;
                    }
                    return this.currentPage - 1;
                },
                paginationStartNumber: function() {
                    // start page defaults to 2 (second page) because the
                    // first page link is always output by default
                    var linksStartPage = 1;

                    // if the start page is at the beginning of the pagination
                    // then account for this
                    if ((this.currentPage - 2) < 2 ) {
                        linksStartPage = 2;
                    } else {
                        // otherwise the start page is equal to the current
                        // page minus 2, this means that the pagination should
                        // have a couple of links either side of the current
                        // page, e.g.   2 3 [4] 5 6
                        linksStartPage = this.currentPage - 2;
                    }

                    // if the start page is very close to the last page, then
                    // account for this
                    if((this.currentPage + 2) > this.numberOfPages) {
                        linksStartPage = linksStartPage - 2;
                    }

                    if(linksStartPage <= 1 ) {
                        linksStartPage = 2;
                    }

                    return linksStartPage;
                },
                paginationEndNumber: function() {
                    var linksEndPage   = this.paginationStartNumber + 4;

                    // if there aren't more pages than the number we
                    // want to show by minimum, then the end page is just equal
                    // to the final result page

                    if ((linksEndPage >= this.numberOfPages)) {
                        // minus 1 because the last page is always output
                        linksEndPage = this.numberOfPages - 1;
                    }

                    if(this.numberOfPages == 1) {
                        linksEndPage = 1;
                    }

                    return linksEndPage;
                }
            },
            methods: {
                updatePageNumber: function(event, newPage) {
                    event.preventDefault();
                    this.$emit('update-page', newPage);
                    search.fetchAPIData(null, newPage)
                },
                range : function (start, end) {
                    return Array(end - start + 1).fill().map(function(_, idx) {
                        return start + idx;
                    });
                }
            },
            template: 
                `
                <div class="events-pagination">
                    <ul class="list--inline pagination govuk-body" role="list" aria-label="Pagination" v-if="numberOfPages > 0">
                        <li class="pagination__item pagination__item--previous" v-if="currentPage != 1">
                            <a href="#" rel="previous" v-on:click="updatePageNumber($event, previousPage)">
                                <span class="icon">
                                    <svg width="17" height="14" xmlns="http://www.w3.org/2000/svg"><path d="M6.7 0l1.4 1.4-4.3 4.3h13v2H3.9l4.2 4-1.4 1.4L0 6.7z" fill="#007194" fill-rule="evenodd"></path></svg>
                                </span>
                                <span>Previous</span> <span class="visuallyhidden">page</span>
                            </a>
                        </li>

                        <li class="pagination__item">
                            <span v-if="currentPage == 1"><span class="visuallyhidden">Page </span>1</span>
                            <a v-else href="#" v-on:click="updatePageNumber($event, 1)"><span class="visuallyhidden">Page </span>1</a>
                        </li>

                        <li class="pagination__item" v-if="paginationStartNumber > 2">…</li>

                        <li class="pagination__item" v-for="page in range(paginationStartNumber, paginationEndNumber)" v-if="numberOfPages > 1">
                            <span v-if="page == currentPage"><span class="visuallyhidden">Page </span>{[ page ]}</span>
                            <a v-else href="#" v-on:click="updatePageNumber($event, page)"><span class="visuallyhidden">Page </span>{[ page ]}</a>
                        </li>

                        <li class="pagination__item" v-if="(paginationEndNumber + 1) < numberOfPages">…</li>

                        <li class="pagination__item" v-if="numberOfPages > 1">
                            <span v-if="currentPage == numberOfPages"><span class="visuallyhidden">Page </span>{[ numberOfPages ]}</span>
                            <a v-else href="#" v-on:click="updatePageNumber($event, numberOfPages)"><span class="visuallyhidden">Page </span>{[ numberOfPages ]}</a>
                        </li>

                        <li class="pagination__item pagination__item--next" v-if="currentPage != numberOfPages">
                            <a href="#" rel="next" v-on:click="updatePageNumber($event, nextPage)">
                                <span>Next</span> <span class="visuallyhidden">page</span>
                                <span class="icon">
                                    <svg width="17" height="14" xmlns="http://www.w3.org/2000/svg"><path d="M10.1 0L8.7 1.4 13 5.7H0v2h12.9l-4.2 4 1.4 1.4 6.7-6.4z" fill="#007194" fill-rule="evenodd"></path></svg>
                                </span>
                            </a>
                        </li>
                    </ul>
                </div>
                `
        });


        var search = new Vue({
            delimiters: ['{[', ']}'],
            el: '#main-content',
            mounted:function(){
                this.filtering(null, "status");
                this.filtering(null, "regulation");
                this.filtering(null, "type");
                this.filtering(null, "pillar");
                this.filtering(null, "category");
            },
            data: {
                javascriptVersion: true,
                results: "",
                responseAvailable: null,
                emptyResult: false,
                apiURL:  apiBaseUrl + "frameworks?",
                checkedStatus: checkedStatus,
                checkedRegulation: checkedRegulation,
                checkedType: checkedType,
                checkedPillar: checkedPillar,
                checkedCategory: checkedCategory,
                currentPage: pageNumber,
                numberOfPages: Number,
                totalResults: Number,

                popstateLoad: false
            },
            created: function() {
                const hideWithOutJS = document.querySelectorAll('.hideWithoutJS');

                hideWithOutJS.forEach(card => {
                if (card.classList.contains('govuk-visually-hidden')) {
                    card.classList.remove('govuk-visually-hidden');
                }});

                // unfortunately we have to update the results when we instantiate
                // the Vue app so it hooks in all the correct event handlers etc.
                this.fetchAPIData(null, this.currentPage);

                // setup popstate event listener for History API
                this.setupHistoryApi();                   
            },
            watch: {
                searchRequestUrl: function() {

                    // if the searchRequestUrl hasn't been updated by a popstate
                    // event (back/forward button) then we push a state item to the
                    // JS History API
                    if(this.popstateLoad === false) {
                        history.pushState({
                            checkedStatus:      this.checkedStatus,
                            checkedRegulation:  this.checkedRegulation,
                            checkedType:        this.checkedType,
                            checkedPillar:      this.checkedPillar,
                            checkedCategory:    this.checkedCategory,
                        }, 'Agreements', this.frontendSearchUrl);
                    }

                    // reset the popstateLoad property to false
                    this.popstateLoad = false;
                }
            },
            computed: {
                frontendQueryUrl: function() {
                    var queryUrl = '/?';

                    if(this.checkedStatus.length != 0) {
                        queryUrl += '&status=' + this.checkedStatus.join();
                    }

                    if(this.checkedRegulation.length != 0) {
                        queryUrl += '&regulation=' + this.checkedRegulation.join();
                    }
                    
                    if(this.checkedType.length != 0) {
                        queryUrl += '&type=' + this.checkedType.join();
                    }

                    if(this.checkedPillar.length != 0) {
                        queryUrl += '&pillar=' + this.checkedPillar.join();
                    }

                    if(this.checkedCategory.length != 0) {
                        queryUrl += '&category=' + this.checkedCategory.join();
                    }

                    if(this.currentPage ){
                        queryUrl += '&page=' + this.currentPage;
                    }

                    return queryUrl != '/?' ? queryUrl : "";
                    
                },
                frontendSearchUrl: function() {
                    var searchUrl = '/agreements' + this.frontendQueryUrl ;
                    return searchUrl;
                }
            },
            methods: {

            }
    </script>

{% endblock %}
