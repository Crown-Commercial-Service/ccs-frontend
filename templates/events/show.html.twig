{% extends 'base.html.twig' %}

{% block title %}Event - {{ event.title|raw }} - CCS{% endblock %}

{% block header %}
    {% embed '/includes/header.html.twig' %}
        {% block bannerarea %}
        {% endblock %}
    {% endembed %}
{% endblock %}


{# Remove colour flourishes from event detail page #}
{% block flourishClasses %}{% endblock %}


{% block body %}

    <!-- required wrapper 1 -->
    <div class="govuk-width-container">

        <!-- If your design requires them, you should place components such as breadcrumbs, back link and phase banner inside this wrapper so that they sit directly underneath the header. -->


        <div class="govuk-phase-banner">
            {% include '/includes/phase-banner-content.html.twig' %}
        </div>


        <div class="govuk-breadcrumbs">
            <ol class="govuk-breadcrumbs__list">
                <li class="govuk-breadcrumbs__list-item">
                    <a class="govuk-breadcrumbs__link" href="/">Home</a>
                </li>
                <li class="govuk-breadcrumbs__list-item">
                    <a class="govuk-breadcrumbs__link" href="/events">Events</a>
                </li>
                <li class="govuk-breadcrumbs__list-item" aria-current="page">
                    {{ event.title|raw }}
                </li>
            </ol>
        </div>


        <main class="govuk-main-wrapper event-detail">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds-from-desktop event-detail__content govuk-clearfix">
                    <a href="/events" class="govuk-back-link">Back <span class="visuallyhidden">to events page</span></a>

                    <h1 class="govuk-heading-xl page-title page-title--tight">{{ event.title|raw }}</h1>

                    {% if event.content.description is not empty %}
                        <h2 class="govuk-heading-m">About this event</h2>

                        <div class="wysiwyg-content">{{ event.content.description|raw }}</div>
                    {% endif %}

                    {% if event.content.cta_destination is not empty and event.content.cta_label is not empty %}
                        <p><a class="--gem-c-button govuk-!-font-size-18 govuk-!-font-weight-bold govuk-button" href="{{ event.content.cta_destination|raw }}">{{ event.content.cta_label|raw }}</a></p>
                    {% endif %}
                </div>
                <aside class="govuk-grid-column-one-third-from-desktop event-detail__aside">
                    <div class="apollo-enclosure apollo-enclosure--padded event-detail__aside__inner">
                        <div class="event-detail__date-time">
                            <h3 class="govuk-heading-s">Date and time</h3>

                            {% if event.content.start_datetime|date('D, j F Y') == event.content.end_datetime|date('D, j F Y') %}
                                <p>{{ event.content.start_datetime|date('D, j F Y H:i') }} - {{ event.content.end_datetime|date('H:i') }}</p>
                            {% else %}
                                <p>{{ event.content.start_datetime|date('D, j F Y H:i') }} - <br />{{ event.content.end_datetime|date('D, j F Y H:i') }}</p>
                            {% endif %}
                        </div>

                        {% if event.content.location_type %}
                            <div class="event-detail__location">
                                <h2 class="govuk-heading-s">Location</h2>

                                {% if event.content.location_type == 'In Person' %}
                                    <p>{{ event.content.street_address|raw }} {{"\n"|nl2br}} {{ event.content.address_region|raw }}, {{ event.content.address_locality|raw }}</p>
                                {% endif %}
                                {% if event.content.location_type == 'Online' %}
                                    <p>Online</p>
                                {% endif %}
                                {% if event.content.location_type == 'Online and In Person' %}
                                    <p>Online and in person</p>
                                {% endif %}
                            </div>
                        {% endif %}

                        {% if event.content.secondary_cta_destination is not empty and event.content.secondary_cta_label is not empty %}
                            <a class="--gem-c-button govuk-!-font-size-18 govuk-!-font-weight-bold govuk-button" href="{{ event.content.secondary_cta_destination }}">{{ event.content.secondary_cta_label }}</a>
                        {% endif %}
                    </div>
                </aside>
            </div>
        </main>

    </div>
{% endblock %}

{% block javascript %}

    <script id="ldjson" type="application/ld+json"></script>

    <script type="text/javascript">

        window.onload = () => {

            const online = {
                "@type": "VirtualLocation",
                "url": event.content.event_url
            }

            const in_person = {
                "@type": "Place",
                "name": event.content.place_name,
                "address": {
                    "@type": "PostalAddress",
                    "streetAddress": event.content.street_address,
                    "addressLocality": event.content.address_locality,
                    "postalCode": event.content.postal_code,
                    "addressRegion": event.content.address_region,
                    "addressCountry": event.content.address_country
                }
            }

            const hybrid = [ online, in_person ];

            const eventAttendanceMode = "";
            const location = "";

            switch(event.content.location_type) {
                case "in-person":
                    eventAttendanceMode = "https://schema.org/OfflineEventAttendanceMode";
                    location = in_person;
                    break;
                case "online": eventAttendanceMode = "https://schema.org/OnlineEventAttendanceMode";
                    location = online;
                    break;
                case "hybrid": eventAttendanceMode = "https://schema.org/MixedEventAttendanceMode";
                    location = hybrid;
                    break;
            }

            document.getElementById('ldjson').text(() => {
                return JSON.stringify({
                    "@context": "https://schema.org",
                    "@type": "Event",
                    "name": event.title,
                    "startDate": event.content.start_datetime,
                    "endDate": event.content.end_datetime,
                    "eventAttendanceMode": eventAttendanceMode,
                    "eventStatus": "https://schema.org/EventScheduled",
                    "location": location,
                    "image": [
                        event.content.image
                    ],
                    "description": event.content.description,
                    "organizer": {
                        "@type": "Organization",
                        "name": "Crown Commercial Service",
                        "url": event.content.cta_destination
                    }
                });
            });
        }

    </script>
{% endblock %}

